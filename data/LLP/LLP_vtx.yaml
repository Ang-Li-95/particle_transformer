selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression

new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   vtx_tk_mask: ak.ones_like(vtx_tk_E)
   label_bkg: 1-label_llp
   vtx_tk_pt_log: np.log(vtx_tk_pt)
   vtx_tk_E_log: np.log(vtx_tk_E)
   vtx_tk_logptrel: np.log(vtx_tk_pt/vtx_pt)
   vtx_tk_logerel: np.log(vtx_tk_E/vtx_E)
   vtx_tk_deltaR: np.hypot(vtx_tk_deta_Lvtx, vtx_tk_dphi_Lvtx)
   vtx_tk_dxy_th: np.tanh(vtx_tk_dxy)
   vtx_tk_dz_th: np.tanh(vtx_tk_dz)
   vtx_tk_pterrratio: vtx_tk_pterr/vtx_tk_pt

preprocess:
  ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
  method: manual
  ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
  data_fraction: 0.5

inputs:
   #pf_points:
   #   length: 8
   #   pad_mode: constant
   #   vars: 
   #      - [vtx_tk_deta_Lvtx, null]
   #      - [vtx_tk_dphi_Lvtx, null]
   pf_features:
      length: 8
      pad_mode: constant
      vars: 
      ### [format 1]: var_name (no transformation)
      ### [format 2]: [var_name, 
      ###              subtract_by(optional, default=None, no transf. if preprocess.method=manual, auto transf. if preprocess.method=auto), 
      ###              multiply_by(optional, default=1), 
      ###              clip_min(optional, default=-5), 
      ###              clip_max(optional, default=5), 
      ###              pad_value(optional, default=0)]
         - [vtx_tk_pt_log, 0.3, 1.1]
         - [vtx_tk_E_log, 0.6, 1.1]
         #- [vtx_tk_logptrel, -4.7, 0.7]
         #- [vtx_tk_logerel, -4.7, 0.7]
         - [vtx_tk_deltaR, 1.4, 0.7]
         - [vtx_tk_nvalidhits, 15, 0.25]
         - [vtx_tk_normchi2, 1.1, 1.4]
         - [vtx_tk_pterrratio, 0.01, 400]
         - [vtx_tk_dxy_th, 0, 6.6]
         - [vtx_tk_dxyerr, 0.02, 27.7]
         - [vtx_tk_dz_th, 0, 10.3]
         - [vtx_tk_dzerr, 0.02, 27.7]
         - [vtx_tk_deta_Lvtx, null]
         - [vtx_tk_dphi_Lvtx, null]
   pf_vectors:
      length: 8
      pad_mode: constant
      vars: 
         - [vtx_tk_px, null]
         - [vtx_tk_py, null]
         - [vtx_tk_pz, null]
         - [vtx_tk_E, null]
   pf_mask:
      length: 8
      pad_mode: constant
      vars: 
         - [vtx_tk_mask, null]
   sv_features:
      length: 1
      pad_mode: constant
      vars:
         - [vtx_lxy, null]
         - [vtx_lxy_err, 0,10]
         - [vtx_ndof, null]
         - [vtx_acollinearity, null]
         - [vtx_dphi_jet1, 0,0.6]
         - [vtx_dphi_met, 0,0.5]

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   type: simple
   value: [label_llp,label_bkg]
   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value: 
   #    truth_label: label.argmax(1)

observers:
   - vtx_match
   - vtx_nmatchtks
   - label_llp
   - label_bkg
   - vtx_acollinearity
   - vtx_pt
   - vtx_E
   - vtx_ntracks
   - vtx_ndof
   - vtx_lxy
   - vtx_lxy_err
   - vtx_dphi_jet1
   - vtx_dphi_met

weights:
